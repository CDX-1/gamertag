const data = {
  adj: [
    "amazing",
    "beautiful",
    "brilliant",
    "charming",
    "compassionate",
    "confident",
    "courageous",
    "creative",
    "delightful",
    "dependable",
    "dynamic",
    "eager",
    "empathetic",
    "enthusiastic",
    "excellent",
    "fantastic",
    "friendly",
    "generous",
    "genuine",
    "gracious",
    "happy",
    "helpful",
    "honest",
    "hopeful",
    "incredible",
    "inspiring",
    "intelligent",
    "joyful",
    "kind",
    "lovable",
    "loyal",
    "magnificent",
    "marvelous",
    "mindful",
    "motivated",
    "noble",
    "optimistic",
    "outstanding",
    "passionate",
    "patient",
    "peaceful",
    "positive",
    "powerful",
    "proactive",
    "progressive",
    "radiant",
    "reliable",
    "respectful",
    "resilient",
    "resourceful",
    "sincere",
    "skilled",
    "smart",
    "sophisticated",
    "supportive",
    "talented",
    "thoughtful",
    "trustworthy",
    "unbeatable",
    "understanding",
    "unique",
    "vibrant",
    "wise",
    "wonderful",
    "zealous",
    "affectionate",
    "ambitious",
    "balanced",
    "brave",
    "calm",
    "captivating",
    "caring",
    "cheerful",
    "chill",
    "clean",
    "committed",
    "considerate",
    "cool",
    "courteous",
    "dedicated",
    "determined",
    "dynamic",
    "elegant",
    "encouraging",
    "energized",
    "focused",
    "funny",
    "generous",
    "grateful",
    "honorable",
    "humble",
    "innovative",
    "joyous",
    "jovial",
    "kindhearted",
    "levelheaded",
    "loving",
    "methodical",
    "mindblowing",
    "openminded",
    "outgoing",
    "polite",
    "positiveminded",
    "reassuring",
    "refined",
    "remarkable",
    "resolute",
    "selfless",
    "sincere",
    "skilled",
    "strong",
    "stylish",
    "thoughtful",
    "tolerant",
    "trusting",
    "uplifting",
    "vigilant",
    "warm",
    "worthy",
  ],
  nouns: [
    "architect",
    "assassin",
    "baker",
    "barbarian",
    "bard",
    "broker",
    "captain",
    "champion",
    "commander",
    "conqueror",
    "craftsman",
    "detective",
    "developer",
    "doctor",
    "duelist",
    "engineer",
    "explorer",
    "fighter",
    "gardener",
    "general",
    "guardian",
    "guide",
    "hunter",
    "inventor",
    "jewelers",
    "judge",
    "knight",
    "leader",
    "librarian",
    "magician",
    "master",
    "mercenary",
    "monk",
    "navigator",
    "noble",
    "oracle",
    "paladin",
    "pioneer",
    "pirate",
    "player",
    "priest",
    "rebel",
    "reformer",
    "rogue",
    "sailor",
    "samurai",
    "scientist",
    "shaman",
    "sheriff",
    "sorcerer",
    "soldier",
    "strategist",
    "surgeon",
    "tactician",
    "thief",
    "warrior",
    "wizard",
    "adventurer",
    "ally",
    "archer",
    "assault",
    "baron",
    "beastmaster",
    "berserker",
    "blademaster",
    "bloodhound",
    "brawler",
    "champion",
    "clerk",
    "colossus",
    "counselor",
    "crusader",
    "dealer",
    "defender",
    "demolisher",
    "enchanter",
    "enforcer",
    "explorer",
    "harbinger",
    "healer",
    "investigator",
    "knight",
    "legend",
    "lumberjack",
    "marauder",
    "mercenary",
    "outlaw",
    "pugilist",
    "reformer",
    "remedy",
    "sage",
    "scout",
    "sentinel",
    "sharpshooter",
    "slicer",
    "spellslinger",
    "spymaster",
    "steward",
    "technician",
    "trainer",
    "warlock",
    "warrior",
    "watchman",
    "wielder",
    "wraith",
    "zealot",
  ],
  nums: Array(100)
    .fill(1)
    .map((n, i) => n + i),
};

export function getAdjectives(): string[] {
    return data.adj;
}

export function getNouns(): string[] {
    return data.nouns;
}

export function getNumbers(): number[] {
    return data.nums
}

export function generateAdjective(): string {
  return data.adj[Math.floor(Math.random() * data.adj.length)];
}

export function generateNoun(): string {
  return data.nouns[Math.floor(Math.random() * data.nouns.length)];
}

export function generateNumber(): number {
  return Math.floor(Math.random() * 100 + 1);
}
